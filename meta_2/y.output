Terminals unused in grammar

    RESERVED


State 88 conflicts: 1 shift/reduce
State 120 conflicts: 1 shift/reduce


Grammar

    0 $accept: FuctionsAndDeclarations $end

    1 FuctionsAndDeclarations: FuctionsAndDeclarations FuctionDefinition
    2                        | FuctionsAndDeclarations FuctionDeclaration
    3                        | FuctionsAndDeclarations Declaration
    4                        | FuctionDefinition
    5                        | FuctionDeclaration
    6                        | Declaration

    7 FuctionDefinition: TypeSpec FuctionDeclarator FuctionBody

    8 FuctionBody: LBRACE DeclarationAndStatements RBRACE
    9            | LBRACE RBRACE

   10 DeclarationAndStatements: Statement DeclarationAndStatements
   11                         | Declaration DeclarationAndStatements
   12                         | Statement
   13                         | Declaration

   14 FuctionDeclaration: TypeSpec FuctionDeclarator SEMI

   15 FuctionDeclarator: IDENTIFIER LPAR ParameterList RPAR

   16 ParameterList: ParameterDeclaration
   17              | ParameterList COMMA ParameterDeclaration

   18 ParameterDeclaration: TypeSpec IDENTIFIER
   19                     | TypeSpec

   20 Declaration: TypeSpec Declarator AuxDeclaration SEMI

   21 AuxDeclaration: AuxDeclaration COMMA Declarator
   22               | ε

   23 TypeSpec: CHAR
   24         | INT
   25         | VOID
   26         | SHORT
   27         | DOUBLE

   28 Declarator: IDENTIFIER ASSIGN Expr
   29           | IDENTIFIER

   30 Statement: Expr SEMI
   31          | SEMI
   32          | LBRACE AuxStatement RBRACE

   33 AuxStatement: AuxStatement Statement
   34             | ε

   35 Statement: IF LPAR Expr RPAR Statement ELSE Statement
   36          | IF LPAR Expr RPAR Statement
   37          | WHILE LPAR Expr RPAR Statement
   38          | RETURN Expr SEMI
   39          | RETURN SEMI

   40 Expr: Expr ASSIGN Expr
   41     | Expr COMMA Expr
   42     | Expr PLUS Expr
   43     | Expr MINUS Expr
   44     | Expr MUL Expr
   45     | Expr DIV Expr
   46     | Expr MOD Expr
   47     | Expr OR Expr
   48     | Expr AND Expr
   49     | Expr BITWISEAND Expr
   50     | Expr BITWISEOR Expr
   51     | Expr BITWISEXOR Expr
   52     | Expr EQ Expr
   53     | Expr NE Expr
   54     | Expr LE Expr
   55     | Expr GE Expr
   56     | Expr LT Expr
   57     | Expr GT Expr
   58     | PLUS Expr
   59     | MINUS Expr
   60     | NOT Expr
   61     | IDENTIFIER LPAR RPAR
   62     | IDENTIFIER LPAR Expr_comma RPAR

   63 Expr_comma: Expr_comma COMMA Expr
   64           | Expr

   65 Expr: IDENTIFIER
   66     | NATURAL
   67     | CHRLIT
   68     | DECIMAL
   69     | LPAR Expr RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    BITWISEAND (258) 49
    BITWISEOR (259) 50
    BITWISEXOR (260) 51
    AND (261) 48
    ASSIGN (262) 28 40
    MUL (263) 44
    COMMA (264) 17 21 41 63
    DIV (265) 45
    EQ (266) 52
    GE (267) 55
    GT (268) 57
    LBRACE (269) 8 9 32
    LE (270) 54
    LPAR (271) 15 35 36 37 61 62 69
    LT (272) 56
    MINUS (273) 43 59
    MOD (274) 46
    NE (275) 53
    NOT (276) 60
    OR (277) 47
    PLUS (278) 42 58
    RBRACE (279) 8 9 32
    RPAR (280) 15 35 36 37 61 62 69
    SEMI (281) 14 20 30 31 38 39
    IDENTIFIER (282) 15 18 28 29 61 62 65
    DECIMAL (283) 68
    NATURAL (284) 66
    CHRLIT (285) 67
    CHAR (286) 23
    ELSE (287) 35
    WHILE (288) 37
    IF (289) 35 36
    INT (290) 24
    SHORT (291) 26
    DOUBLE (292) 27
    RETURN (293) 38 39
    VOID (294) 25
    RESERVED (295)


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    FuctionsAndDeclarations (42)
        on left: 1 2 3 4 5 6
        on right: 0 1 2 3
    FuctionDefinition (43)
        on left: 7
        on right: 1 4
    FuctionBody (44)
        on left: 8 9
        on right: 7
    DeclarationAndStatements (45)
        on left: 10 11 12 13
        on right: 8 10 11
    FuctionDeclaration (46)
        on left: 14
        on right: 2 5
    FuctionDeclarator (47)
        on left: 15
        on right: 7 14
    ParameterList (48)
        on left: 16 17
        on right: 15 17
    ParameterDeclaration (49)
        on left: 18 19
        on right: 16 17
    Declaration (50)
        on left: 20
        on right: 3 6 11 13
    AuxDeclaration (51)
        on left: 21 22
        on right: 20 21
    TypeSpec (52)
        on left: 23 24 25 26 27
        on right: 7 14 18 19 20
    Declarator (53)
        on left: 28 29
        on right: 20 21
    Statement (54)
        on left: 30 31 32 35 36 37 38 39
        on right: 10 12 33 35 36 37
    AuxStatement (55)
        on left: 33 34
        on right: 32 33
    Expr (56)
        on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 65 66 67 68 69
        on right: 28 30 35 36 37 38 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 63 64 69
    Expr_comma (57)
        on left: 63 64
        on right: 62 63


State 0

    0 $accept: • FuctionsAndDeclarations $end

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    FuctionsAndDeclarations  go to state 6
    FuctionDefinition        go to state 7
    FuctionDeclaration       go to state 8
    Declaration              go to state 9
    TypeSpec                 go to state 10


State 1

   23 TypeSpec: CHAR •

    $default  reduce using rule 23 (TypeSpec)


State 2

   24 TypeSpec: INT •

    $default  reduce using rule 24 (TypeSpec)


State 3

   26 TypeSpec: SHORT •

    $default  reduce using rule 26 (TypeSpec)


State 4

   27 TypeSpec: DOUBLE •

    $default  reduce using rule 27 (TypeSpec)


State 5

   25 TypeSpec: VOID •

    $default  reduce using rule 25 (TypeSpec)


State 6

    0 $accept: FuctionsAndDeclarations • $end
    1 FuctionsAndDeclarations: FuctionsAndDeclarations • FuctionDefinition
    2                        | FuctionsAndDeclarations • FuctionDeclaration
    3                        | FuctionsAndDeclarations • Declaration

    $end    shift, and go to state 11
    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    FuctionDefinition   go to state 12
    FuctionDeclaration  go to state 13
    Declaration         go to state 14
    TypeSpec            go to state 10


State 7

    4 FuctionsAndDeclarations: FuctionDefinition •

    $default  reduce using rule 4 (FuctionsAndDeclarations)


State 8

    5 FuctionsAndDeclarations: FuctionDeclaration •

    $default  reduce using rule 5 (FuctionsAndDeclarations)


State 9

    6 FuctionsAndDeclarations: Declaration •

    $default  reduce using rule 6 (FuctionsAndDeclarations)


State 10

    7 FuctionDefinition: TypeSpec • FuctionDeclarator FuctionBody
   14 FuctionDeclaration: TypeSpec • FuctionDeclarator SEMI
   20 Declaration: TypeSpec • Declarator AuxDeclaration SEMI

    IDENTIFIER  shift, and go to state 15

    FuctionDeclarator  go to state 16
    Declarator         go to state 17


State 11

    0 $accept: FuctionsAndDeclarations $end •

    $default  accept


State 12

    1 FuctionsAndDeclarations: FuctionsAndDeclarations FuctionDefinition •

    $default  reduce using rule 1 (FuctionsAndDeclarations)


State 13

    2 FuctionsAndDeclarations: FuctionsAndDeclarations FuctionDeclaration •

    $default  reduce using rule 2 (FuctionsAndDeclarations)


State 14

    3 FuctionsAndDeclarations: FuctionsAndDeclarations Declaration •

    $default  reduce using rule 3 (FuctionsAndDeclarations)


State 15

   15 FuctionDeclarator: IDENTIFIER • LPAR ParameterList RPAR
   28 Declarator: IDENTIFIER • ASSIGN Expr
   29           | IDENTIFIER •

    ASSIGN  shift, and go to state 18
    LPAR    shift, and go to state 19

    $default  reduce using rule 29 (Declarator)


State 16

    7 FuctionDefinition: TypeSpec FuctionDeclarator • FuctionBody
   14 FuctionDeclaration: TypeSpec FuctionDeclarator • SEMI

    LBRACE  shift, and go to state 20
    SEMI    shift, and go to state 21

    FuctionBody  go to state 22


State 17

   20 Declaration: TypeSpec Declarator • AuxDeclaration SEMI

    $default  reduce using rule 22 (AuxDeclaration)

    AuxDeclaration  go to state 23


State 18

   28 Declarator: IDENTIFIER ASSIGN • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 32


State 19

   15 FuctionDeclarator: IDENTIFIER LPAR • ParameterList RPAR

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    ParameterList         go to state 33
    ParameterDeclaration  go to state 34
    TypeSpec              go to state 35


State 20

    8 FuctionBody: LBRACE • DeclarationAndStatements RBRACE
    9            | LBRACE • RBRACE

    LBRACE      shift, and go to state 36
    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    RBRACE      shift, and go to state 37
    SEMI        shift, and go to state 38
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    CHAR        shift, and go to state 1
    WHILE       shift, and go to state 39
    IF          shift, and go to state 40
    INT         shift, and go to state 2
    SHORT       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    RETURN      shift, and go to state 41
    VOID        shift, and go to state 5

    DeclarationAndStatements  go to state 42
    Declaration               go to state 43
    TypeSpec                  go to state 44
    Statement                 go to state 45
    Expr                      go to state 46


State 21

   14 FuctionDeclaration: TypeSpec FuctionDeclarator SEMI •

    $default  reduce using rule 14 (FuctionDeclaration)


State 22

    7 FuctionDefinition: TypeSpec FuctionDeclarator FuctionBody •

    $default  reduce using rule 7 (FuctionDefinition)


State 23

   20 Declaration: TypeSpec Declarator AuxDeclaration • SEMI
   21 AuxDeclaration: AuxDeclaration • COMMA Declarator

    COMMA  shift, and go to state 47
    SEMI   shift, and go to state 48


State 24

   69 Expr: LPAR • Expr RPAR

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 49


State 25

   59 Expr: MINUS • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 50


State 26

   60 Expr: NOT • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 51


State 27

   58 Expr: PLUS • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 52


State 28

   61 Expr: IDENTIFIER • LPAR RPAR
   62     | IDENTIFIER • LPAR Expr_comma RPAR
   65     | IDENTIFIER •

    LPAR  shift, and go to state 53

    $default  reduce using rule 65 (Expr)


State 29

   68 Expr: DECIMAL •

    $default  reduce using rule 68 (Expr)


State 30

   66 Expr: NATURAL •

    $default  reduce using rule 66 (Expr)


State 31

   67 Expr: CHRLIT •

    $default  reduce using rule 67 (Expr)


State 32

   28 Declarator: IDENTIFIER ASSIGN Expr •
   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr

    BITWISEAND  shift, and go to state 54
    BITWISEOR   shift, and go to state 55
    BITWISEXOR  shift, and go to state 56
    AND         shift, and go to state 57
    ASSIGN      shift, and go to state 58
    MUL         shift, and go to state 59
    DIV         shift, and go to state 61
    EQ          shift, and go to state 62
    GE          shift, and go to state 63
    GT          shift, and go to state 64
    LE          shift, and go to state 65
    LT          shift, and go to state 66
    MINUS       shift, and go to state 67
    MOD         shift, and go to state 68
    NE          shift, and go to state 69
    OR          shift, and go to state 70
    PLUS        shift, and go to state 71

    $default  reduce using rule 28 (Declarator)


State 33

   15 FuctionDeclarator: IDENTIFIER LPAR ParameterList • RPAR
   17 ParameterList: ParameterList • COMMA ParameterDeclaration

    COMMA  shift, and go to state 72
    RPAR   shift, and go to state 73


State 34

   16 ParameterList: ParameterDeclaration •

    $default  reduce using rule 16 (ParameterList)


State 35

   18 ParameterDeclaration: TypeSpec • IDENTIFIER
   19                     | TypeSpec •

    IDENTIFIER  shift, and go to state 74

    $default  reduce using rule 19 (ParameterDeclaration)


State 36

   32 Statement: LBRACE • AuxStatement RBRACE

    $default  reduce using rule 34 (AuxStatement)

    AuxStatement  go to state 75


State 37

    9 FuctionBody: LBRACE RBRACE •

    $default  reduce using rule 9 (FuctionBody)


State 38

   31 Statement: SEMI •

    $default  reduce using rule 31 (Statement)


State 39

   37 Statement: WHILE • LPAR Expr RPAR Statement

    LPAR  shift, and go to state 76


State 40

   35 Statement: IF • LPAR Expr RPAR Statement ELSE Statement
   36          | IF • LPAR Expr RPAR Statement

    LPAR  shift, and go to state 77


State 41

   38 Statement: RETURN • Expr SEMI
   39          | RETURN • SEMI

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    SEMI        shift, and go to state 78
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 79


State 42

    8 FuctionBody: LBRACE DeclarationAndStatements • RBRACE

    RBRACE  shift, and go to state 80


State 43

   11 DeclarationAndStatements: Declaration • DeclarationAndStatements
   13                         | Declaration •

    LBRACE      shift, and go to state 36
    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    SEMI        shift, and go to state 38
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    CHAR        shift, and go to state 1
    WHILE       shift, and go to state 39
    IF          shift, and go to state 40
    INT         shift, and go to state 2
    SHORT       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    RETURN      shift, and go to state 41
    VOID        shift, and go to state 5

    $default  reduce using rule 13 (DeclarationAndStatements)

    DeclarationAndStatements  go to state 81
    Declaration               go to state 43
    TypeSpec                  go to state 44
    Statement                 go to state 45
    Expr                      go to state 46


State 44

   20 Declaration: TypeSpec • Declarator AuxDeclaration SEMI

    IDENTIFIER  shift, and go to state 82

    Declarator  go to state 17


State 45

   10 DeclarationAndStatements: Statement • DeclarationAndStatements
   12                         | Statement •

    LBRACE      shift, and go to state 36
    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    SEMI        shift, and go to state 38
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    CHAR        shift, and go to state 1
    WHILE       shift, and go to state 39
    IF          shift, and go to state 40
    INT         shift, and go to state 2
    SHORT       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    RETURN      shift, and go to state 41
    VOID        shift, and go to state 5

    $default  reduce using rule 12 (DeclarationAndStatements)

    DeclarationAndStatements  go to state 83
    Declaration               go to state 43
    TypeSpec                  go to state 44
    Statement                 go to state 45
    Expr                      go to state 46


State 46

   30 Statement: Expr • SEMI
   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr

    BITWISEAND  shift, and go to state 54
    BITWISEOR   shift, and go to state 55
    BITWISEXOR  shift, and go to state 56
    AND         shift, and go to state 57
    ASSIGN      shift, and go to state 58
    MUL         shift, and go to state 59
    COMMA       shift, and go to state 60
    DIV         shift, and go to state 61
    EQ          shift, and go to state 62
    GE          shift, and go to state 63
    GT          shift, and go to state 64
    LE          shift, and go to state 65
    LT          shift, and go to state 66
    MINUS       shift, and go to state 67
    MOD         shift, and go to state 68
    NE          shift, and go to state 69
    OR          shift, and go to state 70
    PLUS        shift, and go to state 71
    SEMI        shift, and go to state 84


State 47

   21 AuxDeclaration: AuxDeclaration COMMA • Declarator

    IDENTIFIER  shift, and go to state 82

    Declarator  go to state 85


State 48

   20 Declaration: TypeSpec Declarator AuxDeclaration SEMI •

    $default  reduce using rule 20 (Declaration)


State 49

   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr
   69     | LPAR Expr • RPAR

    BITWISEAND  shift, and go to state 54
    BITWISEOR   shift, and go to state 55
    BITWISEXOR  shift, and go to state 56
    AND         shift, and go to state 57
    ASSIGN      shift, and go to state 58
    MUL         shift, and go to state 59
    COMMA       shift, and go to state 60
    DIV         shift, and go to state 61
    EQ          shift, and go to state 62
    GE          shift, and go to state 63
    GT          shift, and go to state 64
    LE          shift, and go to state 65
    LT          shift, and go to state 66
    MINUS       shift, and go to state 67
    MOD         shift, and go to state 68
    NE          shift, and go to state 69
    OR          shift, and go to state 70
    PLUS        shift, and go to state 71
    RPAR        shift, and go to state 86


State 50

   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr
   59     | MINUS Expr •

    MUL  shift, and go to state 59
    DIV  shift, and go to state 61
    MOD  shift, and go to state 68

    $default  reduce using rule 59 (Expr)


State 51

   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr
   60     | NOT Expr •

    $default  reduce using rule 60 (Expr)


State 52

   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr
   58     | PLUS Expr •

    MUL  shift, and go to state 59
    DIV  shift, and go to state 61
    MOD  shift, and go to state 68

    $default  reduce using rule 58 (Expr)


State 53

   61 Expr: IDENTIFIER LPAR • RPAR
   62     | IDENTIFIER LPAR • Expr_comma RPAR

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    RPAR        shift, and go to state 87
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr        go to state 88
    Expr_comma  go to state 89


State 54

   49 Expr: Expr BITWISEAND • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 90


State 55

   50 Expr: Expr BITWISEOR • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 91


State 56

   51 Expr: Expr BITWISEXOR • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 92


State 57

   48 Expr: Expr AND • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 93


State 58

   40 Expr: Expr ASSIGN • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 94


State 59

   44 Expr: Expr MUL • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 95


State 60

   41 Expr: Expr COMMA • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 96


State 61

   45 Expr: Expr DIV • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 97


State 62

   52 Expr: Expr EQ • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 98


State 63

   55 Expr: Expr GE • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 99


State 64

   57 Expr: Expr GT • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 100


State 65

   54 Expr: Expr LE • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 101


State 66

   56 Expr: Expr LT • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 102


State 67

   43 Expr: Expr MINUS • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 103


State 68

   46 Expr: Expr MOD • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 104


State 69

   53 Expr: Expr NE • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 105


State 70

   47 Expr: Expr OR • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 106


State 71

   42 Expr: Expr PLUS • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 107


State 72

   17 ParameterList: ParameterList COMMA • ParameterDeclaration

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    ParameterDeclaration  go to state 108
    TypeSpec              go to state 35


State 73

   15 FuctionDeclarator: IDENTIFIER LPAR ParameterList RPAR •

    $default  reduce using rule 15 (FuctionDeclarator)


State 74

   18 ParameterDeclaration: TypeSpec IDENTIFIER •

    $default  reduce using rule 18 (ParameterDeclaration)


State 75

   32 Statement: LBRACE AuxStatement • RBRACE
   33 AuxStatement: AuxStatement • Statement

    LBRACE      shift, and go to state 36
    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    RBRACE      shift, and go to state 109
    SEMI        shift, and go to state 38
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    WHILE       shift, and go to state 39
    IF          shift, and go to state 40
    RETURN      shift, and go to state 41

    Statement  go to state 110
    Expr       go to state 46


State 76

   37 Statement: WHILE LPAR • Expr RPAR Statement

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 111


State 77

   35 Statement: IF LPAR • Expr RPAR Statement ELSE Statement
   36          | IF LPAR • Expr RPAR Statement

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 112


State 78

   39 Statement: RETURN SEMI •

    $default  reduce using rule 39 (Statement)


State 79

   38 Statement: RETURN Expr • SEMI
   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr

    BITWISEAND  shift, and go to state 54
    BITWISEOR   shift, and go to state 55
    BITWISEXOR  shift, and go to state 56
    AND         shift, and go to state 57
    ASSIGN      shift, and go to state 58
    MUL         shift, and go to state 59
    COMMA       shift, and go to state 60
    DIV         shift, and go to state 61
    EQ          shift, and go to state 62
    GE          shift, and go to state 63
    GT          shift, and go to state 64
    LE          shift, and go to state 65
    LT          shift, and go to state 66
    MINUS       shift, and go to state 67
    MOD         shift, and go to state 68
    NE          shift, and go to state 69
    OR          shift, and go to state 70
    PLUS        shift, and go to state 71
    SEMI        shift, and go to state 113


State 80

    8 FuctionBody: LBRACE DeclarationAndStatements RBRACE •

    $default  reduce using rule 8 (FuctionBody)


State 81

   11 DeclarationAndStatements: Declaration DeclarationAndStatements •

    $default  reduce using rule 11 (DeclarationAndStatements)


State 82

   28 Declarator: IDENTIFIER • ASSIGN Expr
   29           | IDENTIFIER •

    ASSIGN  shift, and go to state 18

    $default  reduce using rule 29 (Declarator)


State 83

   10 DeclarationAndStatements: Statement DeclarationAndStatements •

    $default  reduce using rule 10 (DeclarationAndStatements)


State 84

   30 Statement: Expr SEMI •

    $default  reduce using rule 30 (Statement)


State 85

   21 AuxDeclaration: AuxDeclaration COMMA Declarator •

    $default  reduce using rule 21 (AuxDeclaration)


State 86

   69 Expr: LPAR Expr RPAR •

    $default  reduce using rule 69 (Expr)


State 87

   61 Expr: IDENTIFIER LPAR RPAR •

    $default  reduce using rule 61 (Expr)


State 88

   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr
   64 Expr_comma: Expr •

    BITWISEAND  shift, and go to state 54
    BITWISEOR   shift, and go to state 55
    BITWISEXOR  shift, and go to state 56
    AND         shift, and go to state 57
    ASSIGN      shift, and go to state 58
    MUL         shift, and go to state 59
    COMMA       shift, and go to state 60
    DIV         shift, and go to state 61
    EQ          shift, and go to state 62
    GE          shift, and go to state 63
    GT          shift, and go to state 64
    LE          shift, and go to state 65
    LT          shift, and go to state 66
    MINUS       shift, and go to state 67
    MOD         shift, and go to state 68
    NE          shift, and go to state 69
    OR          shift, and go to state 70
    PLUS        shift, and go to state 71

    COMMA     [reduce using rule 64 (Expr_comma)]
    $default  reduce using rule 64 (Expr_comma)

    shift/reduce conflict on token COMMA:
       64 Expr_comma: Expr •
       41 Expr: Expr • COMMA Expr
      Example: Expr • COMMA Expr
      Shift derivation
        Expr_comma
        ↳ 64: Expr
              ↳ 41: Expr • COMMA Expr
      Reduce derivation
        Expr_comma
        ↳ 63: Expr_comma   COMMA Expr
              ↳ 64: Expr •



State 89

   62 Expr: IDENTIFIER LPAR Expr_comma • RPAR
   63 Expr_comma: Expr_comma • COMMA Expr

    COMMA  shift, and go to state 114
    RPAR   shift, and go to state 115


State 90

   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   49     | Expr BITWISEAND Expr •
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr

    MUL    shift, and go to state 59
    DIV    shift, and go to state 61
    EQ     shift, and go to state 62
    GE     shift, and go to state 63
    GT     shift, and go to state 64
    LE     shift, and go to state 65
    LT     shift, and go to state 66
    MINUS  shift, and go to state 67
    MOD    shift, and go to state 68
    NE     shift, and go to state 69
    PLUS   shift, and go to state 71

    $default  reduce using rule 49 (Expr)


State 91

   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   50     | Expr BITWISEOR Expr •
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr

    BITWISEAND  shift, and go to state 54
    BITWISEXOR  shift, and go to state 56
    MUL         shift, and go to state 59
    DIV         shift, and go to state 61
    EQ          shift, and go to state 62
    GE          shift, and go to state 63
    GT          shift, and go to state 64
    LE          shift, and go to state 65
    LT          shift, and go to state 66
    MINUS       shift, and go to state 67
    MOD         shift, and go to state 68
    NE          shift, and go to state 69
    PLUS        shift, and go to state 71

    $default  reduce using rule 50 (Expr)


State 92

   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   51     | Expr BITWISEXOR Expr •
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr

    BITWISEAND  shift, and go to state 54
    MUL         shift, and go to state 59
    DIV         shift, and go to state 61
    EQ          shift, and go to state 62
    GE          shift, and go to state 63
    GT          shift, and go to state 64
    LE          shift, and go to state 65
    LT          shift, and go to state 66
    MINUS       shift, and go to state 67
    MOD         shift, and go to state 68
    NE          shift, and go to state 69
    PLUS        shift, and go to state 71

    $default  reduce using rule 51 (Expr)


State 93

   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   48     | Expr AND Expr •
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr

    BITWISEAND  shift, and go to state 54
    BITWISEOR   shift, and go to state 55
    BITWISEXOR  shift, and go to state 56
    MUL         shift, and go to state 59
    DIV         shift, and go to state 61
    EQ          shift, and go to state 62
    GE          shift, and go to state 63
    GT          shift, and go to state 64
    LE          shift, and go to state 65
    LT          shift, and go to state 66
    MINUS       shift, and go to state 67
    MOD         shift, and go to state 68
    NE          shift, and go to state 69
    PLUS        shift, and go to state 71

    $default  reduce using rule 48 (Expr)


State 94

   40 Expr: Expr • ASSIGN Expr
   40     | Expr ASSIGN Expr •
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr

    BITWISEAND  shift, and go to state 54
    BITWISEOR   shift, and go to state 55
    BITWISEXOR  shift, and go to state 56
    AND         shift, and go to state 57
    ASSIGN      shift, and go to state 58
    MUL         shift, and go to state 59
    DIV         shift, and go to state 61
    EQ          shift, and go to state 62
    GE          shift, and go to state 63
    GT          shift, and go to state 64
    LE          shift, and go to state 65
    LT          shift, and go to state 66
    MINUS       shift, and go to state 67
    MOD         shift, and go to state 68
    NE          shift, and go to state 69
    OR          shift, and go to state 70
    PLUS        shift, and go to state 71

    $default  reduce using rule 40 (Expr)


State 95

   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   44     | Expr MUL Expr •
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr

    $default  reduce using rule 44 (Expr)


State 96

   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   41     | Expr COMMA Expr •
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr

    BITWISEAND  shift, and go to state 54
    BITWISEOR   shift, and go to state 55
    BITWISEXOR  shift, and go to state 56
    AND         shift, and go to state 57
    ASSIGN      shift, and go to state 58
    MUL         shift, and go to state 59
    DIV         shift, and go to state 61
    EQ          shift, and go to state 62
    GE          shift, and go to state 63
    GT          shift, and go to state 64
    LE          shift, and go to state 65
    LT          shift, and go to state 66
    MINUS       shift, and go to state 67
    MOD         shift, and go to state 68
    NE          shift, and go to state 69
    OR          shift, and go to state 70
    PLUS        shift, and go to state 71

    $default  reduce using rule 41 (Expr)


State 97

   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   45     | Expr DIV Expr •
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr

    $default  reduce using rule 45 (Expr)


State 98

   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   52     | Expr EQ Expr •
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr

    MUL    shift, and go to state 59
    DIV    shift, and go to state 61
    GE     shift, and go to state 63
    GT     shift, and go to state 64
    LE     shift, and go to state 65
    LT     shift, and go to state 66
    MINUS  shift, and go to state 67
    MOD    shift, and go to state 68
    PLUS   shift, and go to state 71

    $default  reduce using rule 52 (Expr)


State 99

   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   55     | Expr GE Expr •
   56     | Expr • LT Expr
   57     | Expr • GT Expr

    MUL    shift, and go to state 59
    DIV    shift, and go to state 61
    MINUS  shift, and go to state 67
    MOD    shift, and go to state 68
    PLUS   shift, and go to state 71

    $default  reduce using rule 55 (Expr)


State 100

   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr
   57     | Expr GT Expr •

    MUL    shift, and go to state 59
    DIV    shift, and go to state 61
    MINUS  shift, and go to state 67
    MOD    shift, and go to state 68
    PLUS   shift, and go to state 71

    $default  reduce using rule 57 (Expr)


State 101

   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   54     | Expr LE Expr •
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr

    MUL    shift, and go to state 59
    DIV    shift, and go to state 61
    MINUS  shift, and go to state 67
    MOD    shift, and go to state 68
    PLUS   shift, and go to state 71

    $default  reduce using rule 54 (Expr)


State 102

   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   56     | Expr LT Expr •
   57     | Expr • GT Expr

    MUL    shift, and go to state 59
    DIV    shift, and go to state 61
    MINUS  shift, and go to state 67
    MOD    shift, and go to state 68
    PLUS   shift, and go to state 71

    $default  reduce using rule 56 (Expr)


State 103

   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   43     | Expr MINUS Expr •
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr

    MUL  shift, and go to state 59
    DIV  shift, and go to state 61
    MOD  shift, and go to state 68

    $default  reduce using rule 43 (Expr)


State 104

   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   46     | Expr MOD Expr •
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr

    $default  reduce using rule 46 (Expr)


State 105

   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   53     | Expr NE Expr •
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr

    MUL    shift, and go to state 59
    DIV    shift, and go to state 61
    GE     shift, and go to state 63
    GT     shift, and go to state 64
    LE     shift, and go to state 65
    LT     shift, and go to state 66
    MINUS  shift, and go to state 67
    MOD    shift, and go to state 68
    PLUS   shift, and go to state 71

    $default  reduce using rule 53 (Expr)


State 106

   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   47     | Expr OR Expr •
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr

    BITWISEAND  shift, and go to state 54
    BITWISEOR   shift, and go to state 55
    BITWISEXOR  shift, and go to state 56
    AND         shift, and go to state 57
    MUL         shift, and go to state 59
    DIV         shift, and go to state 61
    EQ          shift, and go to state 62
    GE          shift, and go to state 63
    GT          shift, and go to state 64
    LE          shift, and go to state 65
    LT          shift, and go to state 66
    MINUS       shift, and go to state 67
    MOD         shift, and go to state 68
    NE          shift, and go to state 69
    PLUS        shift, and go to state 71

    $default  reduce using rule 47 (Expr)


State 107

   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   42     | Expr PLUS Expr •
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr

    MUL  shift, and go to state 59
    DIV  shift, and go to state 61
    MOD  shift, and go to state 68

    $default  reduce using rule 42 (Expr)


State 108

   17 ParameterList: ParameterList COMMA ParameterDeclaration •

    $default  reduce using rule 17 (ParameterList)


State 109

   32 Statement: LBRACE AuxStatement RBRACE •

    $default  reduce using rule 32 (Statement)


State 110

   33 AuxStatement: AuxStatement Statement •

    $default  reduce using rule 33 (AuxStatement)


State 111

   37 Statement: WHILE LPAR Expr • RPAR Statement
   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr

    BITWISEAND  shift, and go to state 54
    BITWISEOR   shift, and go to state 55
    BITWISEXOR  shift, and go to state 56
    AND         shift, and go to state 57
    ASSIGN      shift, and go to state 58
    MUL         shift, and go to state 59
    COMMA       shift, and go to state 60
    DIV         shift, and go to state 61
    EQ          shift, and go to state 62
    GE          shift, and go to state 63
    GT          shift, and go to state 64
    LE          shift, and go to state 65
    LT          shift, and go to state 66
    MINUS       shift, and go to state 67
    MOD         shift, and go to state 68
    NE          shift, and go to state 69
    OR          shift, and go to state 70
    PLUS        shift, and go to state 71
    RPAR        shift, and go to state 116


State 112

   35 Statement: IF LPAR Expr • RPAR Statement ELSE Statement
   36          | IF LPAR Expr • RPAR Statement
   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr

    BITWISEAND  shift, and go to state 54
    BITWISEOR   shift, and go to state 55
    BITWISEXOR  shift, and go to state 56
    AND         shift, and go to state 57
    ASSIGN      shift, and go to state 58
    MUL         shift, and go to state 59
    COMMA       shift, and go to state 60
    DIV         shift, and go to state 61
    EQ          shift, and go to state 62
    GE          shift, and go to state 63
    GT          shift, and go to state 64
    LE          shift, and go to state 65
    LT          shift, and go to state 66
    MINUS       shift, and go to state 67
    MOD         shift, and go to state 68
    NE          shift, and go to state 69
    OR          shift, and go to state 70
    PLUS        shift, and go to state 71
    RPAR        shift, and go to state 117


State 113

   38 Statement: RETURN Expr SEMI •

    $default  reduce using rule 38 (Statement)


State 114

   63 Expr_comma: Expr_comma COMMA • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 118


State 115

   62 Expr: IDENTIFIER LPAR Expr_comma RPAR •

    $default  reduce using rule 62 (Expr)


State 116

   37 Statement: WHILE LPAR Expr RPAR • Statement

    LBRACE      shift, and go to state 36
    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    SEMI        shift, and go to state 38
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    WHILE       shift, and go to state 39
    IF          shift, and go to state 40
    RETURN      shift, and go to state 41

    Statement  go to state 119
    Expr       go to state 46


State 117

   35 Statement: IF LPAR Expr RPAR • Statement ELSE Statement
   36          | IF LPAR Expr RPAR • Statement

    LBRACE      shift, and go to state 36
    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    SEMI        shift, and go to state 38
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    WHILE       shift, and go to state 39
    IF          shift, and go to state 40
    RETURN      shift, and go to state 41

    Statement  go to state 120
    Expr       go to state 46


State 118

   40 Expr: Expr • ASSIGN Expr
   41     | Expr • COMMA Expr
   42     | Expr • PLUS Expr
   43     | Expr • MINUS Expr
   44     | Expr • MUL Expr
   45     | Expr • DIV Expr
   46     | Expr • MOD Expr
   47     | Expr • OR Expr
   48     | Expr • AND Expr
   49     | Expr • BITWISEAND Expr
   50     | Expr • BITWISEOR Expr
   51     | Expr • BITWISEXOR Expr
   52     | Expr • EQ Expr
   53     | Expr • NE Expr
   54     | Expr • LE Expr
   55     | Expr • GE Expr
   56     | Expr • LT Expr
   57     | Expr • GT Expr
   63 Expr_comma: Expr_comma COMMA Expr •

    BITWISEAND  shift, and go to state 54
    BITWISEOR   shift, and go to state 55
    BITWISEXOR  shift, and go to state 56
    AND         shift, and go to state 57
    ASSIGN      shift, and go to state 58
    MUL         shift, and go to state 59
    DIV         shift, and go to state 61
    EQ          shift, and go to state 62
    GE          shift, and go to state 63
    GT          shift, and go to state 64
    LE          shift, and go to state 65
    LT          shift, and go to state 66
    MINUS       shift, and go to state 67
    MOD         shift, and go to state 68
    NE          shift, and go to state 69
    OR          shift, and go to state 70
    PLUS        shift, and go to state 71

    $default  reduce using rule 63 (Expr_comma)


State 119

   37 Statement: WHILE LPAR Expr RPAR Statement •

    $default  reduce using rule 37 (Statement)


State 120

   35 Statement: IF LPAR Expr RPAR Statement • ELSE Statement
   36          | IF LPAR Expr RPAR Statement •

    ELSE  shift, and go to state 121

    ELSE      [reduce using rule 36 (Statement)]
    $default  reduce using rule 36 (Statement)

    shift/reduce conflict on token ELSE:
       36 Statement: IF LPAR Expr RPAR Statement •
       35 Statement: IF LPAR Expr RPAR Statement • ELSE Statement
      Example: IF LPAR Expr RPAR IF LPAR Expr RPAR Statement • ELSE Statement
      Shift derivation
        Statement
        ↳ 36: IF LPAR Expr RPAR Statement
                                ↳ 35: IF LPAR Expr RPAR Statement • ELSE Statement
      Reduce derivation
        Statement
        ↳ 35: IF LPAR Expr RPAR Statement                           ELSE Statement
                                ↳ 36: IF LPAR Expr RPAR Statement •



State 121

   35 Statement: IF LPAR Expr RPAR Statement ELSE • Statement

    LBRACE      shift, and go to state 36
    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    SEMI        shift, and go to state 38
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    WHILE       shift, and go to state 39
    IF          shift, and go to state 40
    RETURN      shift, and go to state 41

    Statement  go to state 122
    Expr       go to state 46


State 122

   35 Statement: IF LPAR Expr RPAR Statement ELSE Statement •

    $default  reduce using rule 35 (Statement)
