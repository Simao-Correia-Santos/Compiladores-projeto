Terminals unused in grammar

    RESERVED


Grammar

    0 $accept: FuctionsAndDeclarations $end

    1 FuctionsAndDeclarations: FuctionsAndDeclarations FuctionDefinition
    2                        | FuctionsAndDeclarations FuctionDeclaration
    3                        | FuctionsAndDeclarations Declaration
    4                        | FuctionDefinition
    5                        | FuctionDeclaration
    6                        | Declaration

    7 FuctionDefinition: TypeSpec FuctionDeclarator FuctionBody

    8 FuctionBody: LBRACE DeclarationAndStatements RBRACE

    9 DeclarationAndStatements: Statement DeclarationAndStatements
   10                         | Declaration DeclarationAndStatements
   11                         | Statement
   12                         | Declaration

   13 FuctionDeclaration: TypeSpec FuctionDeclarator SEMI

   14 FuctionDeclarator: IDENTIFIER LPAR ParameterList RPAR

   15 ParameterList: ParameterDeclaration
   16              | COMMA ParameterDeclaration

   17 ParameterDeclaration: TypeSpec IDENTIFIER

   18 Declaration: TypeSpec Declarator COMMA Declarator SEMI

   19 TypeSpec: CHAR
   20         | INT
   21         | VOID
   22         | SHORT
   23         | DOUBLE

   24 Declarator: IDENTIFIER ASSIGN Expr

   25 Statement: Expr SEMI
   26          | LBRACE Statement RBRACE
   27          | IF LPAR Expr RPAR Statement ELSE Statement
   28          | WHILE LPAR Expr RPAR Statement
   29          | RETURN Expr SEMI

   30 Expr: Expr ASSIGN Expr
   31     | Expr COMMA Expr
   32     | Expr PLUS Expr
   33     | Expr MINUS Expr
   34     | Expr MUL Expr
   35     | Expr DIV Expr
   36     | Expr MOD Expr
   37     | Expr OR Expr
   38     | Expr AND Expr
   39     | Expr BITWISEAND Expr
   40     | Expr BITWISEOR Expr
   41     | Expr BITWISEXOR Expr
   42     | Expr EQ Expr
   43     | Expr NE Expr
   44     | Expr LE Expr
   45     | Expr GE Expr
   46     | Expr LT Expr
   47     | Expr GT Expr
   48     | PLUS Expr
   49     | MINUS Expr
   50     | NOT Expr
   51     | IDENTIFIER LPAR Expr COMMA Expr RPAR
   52     | IDENTIFIER
   53     | NATURAL
   54     | CHRLIT
   55     | DECIMAL
   56     | LPAR Expr RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    BITWISEAND (258) 39
    BITWISEOR (259) 40
    BITWISEXOR (260) 41
    AND (261) 38
    ASSIGN (262) 24 30
    MUL (263) 34
    COMMA (264) 16 18 31 51
    DIV (265) 35
    EQ (266) 42
    GE (267) 45
    GT (268) 47
    LBRACE (269) 8 26
    LE (270) 44
    LPAR (271) 14 27 28 51 56
    LT (272) 46
    MINUS (273) 33 49
    MOD (274) 36
    NE (275) 43
    NOT (276) 50
    OR (277) 37
    PLUS (278) 32 48
    RBRACE (279) 8 26
    RPAR (280) 14 27 28 51 56
    SEMI (281) 13 18 25 29
    IDENTIFIER (282) 14 17 24 51 52
    DECIMAL (283) 55
    NATURAL (284) 53
    CHRLIT (285) 54
    CHAR (286) 19
    ELSE (287) 27
    WHILE (288) 28
    IF (289) 27
    INT (290) 20
    SHORT (291) 22
    DOUBLE (292) 23
    RETURN (293) 29
    VOID (294) 21
    RESERVED (295)


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    FuctionsAndDeclarations (42)
        on left: 1 2 3 4 5 6
        on right: 0 1 2 3
    FuctionDefinition (43)
        on left: 7
        on right: 1 4
    FuctionBody (44)
        on left: 8
        on right: 7
    DeclarationAndStatements (45)
        on left: 9 10 11 12
        on right: 8 9 10
    FuctionDeclaration (46)
        on left: 13
        on right: 2 5
    FuctionDeclarator (47)
        on left: 14
        on right: 7 13
    ParameterList (48)
        on left: 15 16
        on right: 14
    ParameterDeclaration (49)
        on left: 17
        on right: 15 16
    Declaration (50)
        on left: 18
        on right: 3 6 10 12
    TypeSpec (51)
        on left: 19 20 21 22 23
        on right: 7 13 17 18
    Declarator (52)
        on left: 24
        on right: 18
    Statement (53)
        on left: 25 26 27 28 29
        on right: 9 11 26 27 28
    Expr (54)
        on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
        on right: 24 25 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 56


State 0

    0 $accept: • FuctionsAndDeclarations $end

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    FuctionsAndDeclarations  go to state 6
    FuctionDefinition        go to state 7
    FuctionDeclaration       go to state 8
    Declaration              go to state 9
    TypeSpec                 go to state 10


State 1

   19 TypeSpec: CHAR •

    $default  reduce using rule 19 (TypeSpec)


State 2

   20 TypeSpec: INT •

    $default  reduce using rule 20 (TypeSpec)


State 3

   22 TypeSpec: SHORT •

    $default  reduce using rule 22 (TypeSpec)


State 4

   23 TypeSpec: DOUBLE •

    $default  reduce using rule 23 (TypeSpec)


State 5

   21 TypeSpec: VOID •

    $default  reduce using rule 21 (TypeSpec)


State 6

    0 $accept: FuctionsAndDeclarations • $end
    1 FuctionsAndDeclarations: FuctionsAndDeclarations • FuctionDefinition
    2                        | FuctionsAndDeclarations • FuctionDeclaration
    3                        | FuctionsAndDeclarations • Declaration

    $end    shift, and go to state 11
    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    FuctionDefinition   go to state 12
    FuctionDeclaration  go to state 13
    Declaration         go to state 14
    TypeSpec            go to state 10


State 7

    4 FuctionsAndDeclarations: FuctionDefinition •

    $default  reduce using rule 4 (FuctionsAndDeclarations)


State 8

    5 FuctionsAndDeclarations: FuctionDeclaration •

    $default  reduce using rule 5 (FuctionsAndDeclarations)


State 9

    6 FuctionsAndDeclarations: Declaration •

    $default  reduce using rule 6 (FuctionsAndDeclarations)


State 10

    7 FuctionDefinition: TypeSpec • FuctionDeclarator FuctionBody
   13 FuctionDeclaration: TypeSpec • FuctionDeclarator SEMI
   18 Declaration: TypeSpec • Declarator COMMA Declarator SEMI

    IDENTIFIER  shift, and go to state 15

    FuctionDeclarator  go to state 16
    Declarator         go to state 17


State 11

    0 $accept: FuctionsAndDeclarations $end •

    $default  accept


State 12

    1 FuctionsAndDeclarations: FuctionsAndDeclarations FuctionDefinition •

    $default  reduce using rule 1 (FuctionsAndDeclarations)


State 13

    2 FuctionsAndDeclarations: FuctionsAndDeclarations FuctionDeclaration •

    $default  reduce using rule 2 (FuctionsAndDeclarations)


State 14

    3 FuctionsAndDeclarations: FuctionsAndDeclarations Declaration •

    $default  reduce using rule 3 (FuctionsAndDeclarations)


State 15

   14 FuctionDeclarator: IDENTIFIER • LPAR ParameterList RPAR
   24 Declarator: IDENTIFIER • ASSIGN Expr

    ASSIGN  shift, and go to state 18
    LPAR    shift, and go to state 19


State 16

    7 FuctionDefinition: TypeSpec FuctionDeclarator • FuctionBody
   13 FuctionDeclaration: TypeSpec FuctionDeclarator • SEMI

    LBRACE  shift, and go to state 20
    SEMI    shift, and go to state 21

    FuctionBody  go to state 22


State 17

   18 Declaration: TypeSpec Declarator • COMMA Declarator SEMI

    COMMA  shift, and go to state 23


State 18

   24 Declarator: IDENTIFIER ASSIGN • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 32


State 19

   14 FuctionDeclarator: IDENTIFIER LPAR • ParameterList RPAR

    COMMA   shift, and go to state 33
    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    ParameterList         go to state 34
    ParameterDeclaration  go to state 35
    TypeSpec              go to state 36


State 20

    8 FuctionBody: LBRACE • DeclarationAndStatements RBRACE

    LBRACE      shift, and go to state 37
    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    CHAR        shift, and go to state 1
    WHILE       shift, and go to state 38
    IF          shift, and go to state 39
    INT         shift, and go to state 2
    SHORT       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    RETURN      shift, and go to state 40
    VOID        shift, and go to state 5

    DeclarationAndStatements  go to state 41
    Declaration               go to state 42
    TypeSpec                  go to state 43
    Statement                 go to state 44
    Expr                      go to state 45


State 21

   13 FuctionDeclaration: TypeSpec FuctionDeclarator SEMI •

    $default  reduce using rule 13 (FuctionDeclaration)


State 22

    7 FuctionDefinition: TypeSpec FuctionDeclarator FuctionBody •

    $default  reduce using rule 7 (FuctionDefinition)


State 23

   18 Declaration: TypeSpec Declarator COMMA • Declarator SEMI

    IDENTIFIER  shift, and go to state 46

    Declarator  go to state 47


State 24

   56 Expr: LPAR • Expr RPAR

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 48


State 25

   49 Expr: MINUS • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 49


State 26

   50 Expr: NOT • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 50


State 27

   48 Expr: PLUS • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 51


State 28

   51 Expr: IDENTIFIER • LPAR Expr COMMA Expr RPAR
   52     | IDENTIFIER •

    LPAR  shift, and go to state 52

    $default  reduce using rule 52 (Expr)


State 29

   55 Expr: DECIMAL •

    $default  reduce using rule 55 (Expr)


State 30

   53 Expr: NATURAL •

    $default  reduce using rule 53 (Expr)


State 31

   54 Expr: CHRLIT •

    $default  reduce using rule 54 (Expr)


State 32

   24 Declarator: IDENTIFIER ASSIGN Expr •
   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr

    BITWISEAND  shift, and go to state 53
    BITWISEOR   shift, and go to state 54
    BITWISEXOR  shift, and go to state 55
    AND         shift, and go to state 56
    ASSIGN      shift, and go to state 57
    MUL         shift, and go to state 58
    DIV         shift, and go to state 60
    EQ          shift, and go to state 61
    GE          shift, and go to state 62
    GT          shift, and go to state 63
    LE          shift, and go to state 64
    LT          shift, and go to state 65
    MINUS       shift, and go to state 66
    MOD         shift, and go to state 67
    NE          shift, and go to state 68
    OR          shift, and go to state 69
    PLUS        shift, and go to state 70

    $default  reduce using rule 24 (Declarator)


State 33

   16 ParameterList: COMMA • ParameterDeclaration

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    ParameterDeclaration  go to state 71
    TypeSpec              go to state 36


State 34

   14 FuctionDeclarator: IDENTIFIER LPAR ParameterList • RPAR

    RPAR  shift, and go to state 72


State 35

   15 ParameterList: ParameterDeclaration •

    $default  reduce using rule 15 (ParameterList)


State 36

   17 ParameterDeclaration: TypeSpec • IDENTIFIER

    IDENTIFIER  shift, and go to state 73


State 37

   26 Statement: LBRACE • Statement RBRACE

    LBRACE      shift, and go to state 37
    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    WHILE       shift, and go to state 38
    IF          shift, and go to state 39
    RETURN      shift, and go to state 40

    Statement  go to state 74
    Expr       go to state 45


State 38

   28 Statement: WHILE • LPAR Expr RPAR Statement

    LPAR  shift, and go to state 75


State 39

   27 Statement: IF • LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 76


State 40

   29 Statement: RETURN • Expr SEMI

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 77


State 41

    8 FuctionBody: LBRACE DeclarationAndStatements • RBRACE

    RBRACE  shift, and go to state 78


State 42

   10 DeclarationAndStatements: Declaration • DeclarationAndStatements
   12                         | Declaration •

    LBRACE      shift, and go to state 37
    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    CHAR        shift, and go to state 1
    WHILE       shift, and go to state 38
    IF          shift, and go to state 39
    INT         shift, and go to state 2
    SHORT       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    RETURN      shift, and go to state 40
    VOID        shift, and go to state 5

    $default  reduce using rule 12 (DeclarationAndStatements)

    DeclarationAndStatements  go to state 79
    Declaration               go to state 42
    TypeSpec                  go to state 43
    Statement                 go to state 44
    Expr                      go to state 45


State 43

   18 Declaration: TypeSpec • Declarator COMMA Declarator SEMI

    IDENTIFIER  shift, and go to state 46

    Declarator  go to state 17


State 44

    9 DeclarationAndStatements: Statement • DeclarationAndStatements
   11                         | Statement •

    LBRACE      shift, and go to state 37
    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    CHAR        shift, and go to state 1
    WHILE       shift, and go to state 38
    IF          shift, and go to state 39
    INT         shift, and go to state 2
    SHORT       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    RETURN      shift, and go to state 40
    VOID        shift, and go to state 5

    $default  reduce using rule 11 (DeclarationAndStatements)

    DeclarationAndStatements  go to state 80
    Declaration               go to state 42
    TypeSpec                  go to state 43
    Statement                 go to state 44
    Expr                      go to state 45


State 45

   25 Statement: Expr • SEMI
   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr

    BITWISEAND  shift, and go to state 53
    BITWISEOR   shift, and go to state 54
    BITWISEXOR  shift, and go to state 55
    AND         shift, and go to state 56
    ASSIGN      shift, and go to state 57
    MUL         shift, and go to state 58
    COMMA       shift, and go to state 59
    DIV         shift, and go to state 60
    EQ          shift, and go to state 61
    GE          shift, and go to state 62
    GT          shift, and go to state 63
    LE          shift, and go to state 64
    LT          shift, and go to state 65
    MINUS       shift, and go to state 66
    MOD         shift, and go to state 67
    NE          shift, and go to state 68
    OR          shift, and go to state 69
    PLUS        shift, and go to state 70
    SEMI        shift, and go to state 81


State 46

   24 Declarator: IDENTIFIER • ASSIGN Expr

    ASSIGN  shift, and go to state 18


State 47

   18 Declaration: TypeSpec Declarator COMMA Declarator • SEMI

    SEMI  shift, and go to state 82


State 48

   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr
   56     | LPAR Expr • RPAR

    BITWISEAND  shift, and go to state 53
    BITWISEOR   shift, and go to state 54
    BITWISEXOR  shift, and go to state 55
    AND         shift, and go to state 56
    ASSIGN      shift, and go to state 57
    MUL         shift, and go to state 58
    COMMA       shift, and go to state 59
    DIV         shift, and go to state 60
    EQ          shift, and go to state 61
    GE          shift, and go to state 62
    GT          shift, and go to state 63
    LE          shift, and go to state 64
    LT          shift, and go to state 65
    MINUS       shift, and go to state 66
    MOD         shift, and go to state 67
    NE          shift, and go to state 68
    OR          shift, and go to state 69
    PLUS        shift, and go to state 70
    RPAR        shift, and go to state 83


State 49

   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr
   49     | MINUS Expr •

    MUL  shift, and go to state 58
    DIV  shift, and go to state 60
    MOD  shift, and go to state 67

    $default  reduce using rule 49 (Expr)


State 50

   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr
   50     | NOT Expr •

    $default  reduce using rule 50 (Expr)


State 51

   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr
   48     | PLUS Expr •

    MUL  shift, and go to state 58
    DIV  shift, and go to state 60
    MOD  shift, and go to state 67

    $default  reduce using rule 48 (Expr)


State 52

   51 Expr: IDENTIFIER LPAR • Expr COMMA Expr RPAR

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 84


State 53

   39 Expr: Expr BITWISEAND • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 85


State 54

   40 Expr: Expr BITWISEOR • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 86


State 55

   41 Expr: Expr BITWISEXOR • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 87


State 56

   38 Expr: Expr AND • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 88


State 57

   30 Expr: Expr ASSIGN • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 89


State 58

   34 Expr: Expr MUL • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 90


State 59

   31 Expr: Expr COMMA • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 91


State 60

   35 Expr: Expr DIV • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 92


State 61

   42 Expr: Expr EQ • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 93


State 62

   45 Expr: Expr GE • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 94


State 63

   47 Expr: Expr GT • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 95


State 64

   44 Expr: Expr LE • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 96


State 65

   46 Expr: Expr LT • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 97


State 66

   33 Expr: Expr MINUS • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 98


State 67

   36 Expr: Expr MOD • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 99


State 68

   43 Expr: Expr NE • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 100


State 69

   37 Expr: Expr OR • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 101


State 70

   32 Expr: Expr PLUS • Expr

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 102


State 71

   16 ParameterList: COMMA ParameterDeclaration •

    $default  reduce using rule 16 (ParameterList)


State 72

   14 FuctionDeclarator: IDENTIFIER LPAR ParameterList RPAR •

    $default  reduce using rule 14 (FuctionDeclarator)


State 73

   17 ParameterDeclaration: TypeSpec IDENTIFIER •

    $default  reduce using rule 17 (ParameterDeclaration)


State 74

   26 Statement: LBRACE Statement • RBRACE

    RBRACE  shift, and go to state 103


State 75

   28 Statement: WHILE LPAR • Expr RPAR Statement

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 104


State 76

   27 Statement: IF LPAR • Expr RPAR Statement ELSE Statement

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 105


State 77

   29 Statement: RETURN Expr • SEMI
   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr

    BITWISEAND  shift, and go to state 53
    BITWISEOR   shift, and go to state 54
    BITWISEXOR  shift, and go to state 55
    AND         shift, and go to state 56
    ASSIGN      shift, and go to state 57
    MUL         shift, and go to state 58
    COMMA       shift, and go to state 59
    DIV         shift, and go to state 60
    EQ          shift, and go to state 61
    GE          shift, and go to state 62
    GT          shift, and go to state 63
    LE          shift, and go to state 64
    LT          shift, and go to state 65
    MINUS       shift, and go to state 66
    MOD         shift, and go to state 67
    NE          shift, and go to state 68
    OR          shift, and go to state 69
    PLUS        shift, and go to state 70
    SEMI        shift, and go to state 106


State 78

    8 FuctionBody: LBRACE DeclarationAndStatements RBRACE •

    $default  reduce using rule 8 (FuctionBody)


State 79

   10 DeclarationAndStatements: Declaration DeclarationAndStatements •

    $default  reduce using rule 10 (DeclarationAndStatements)


State 80

    9 DeclarationAndStatements: Statement DeclarationAndStatements •

    $default  reduce using rule 9 (DeclarationAndStatements)


State 81

   25 Statement: Expr SEMI •

    $default  reduce using rule 25 (Statement)


State 82

   18 Declaration: TypeSpec Declarator COMMA Declarator SEMI •

    $default  reduce using rule 18 (Declaration)


State 83

   56 Expr: LPAR Expr RPAR •

    $default  reduce using rule 56 (Expr)


State 84

   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr
   51     | IDENTIFIER LPAR Expr • COMMA Expr RPAR

    BITWISEAND  shift, and go to state 53
    BITWISEOR   shift, and go to state 54
    BITWISEXOR  shift, and go to state 55
    AND         shift, and go to state 56
    ASSIGN      shift, and go to state 57
    MUL         shift, and go to state 58
    COMMA       shift, and go to state 107
    DIV         shift, and go to state 60
    EQ          shift, and go to state 61
    GE          shift, and go to state 62
    GT          shift, and go to state 63
    LE          shift, and go to state 64
    LT          shift, and go to state 65
    MINUS       shift, and go to state 66
    MOD         shift, and go to state 67
    NE          shift, and go to state 68
    OR          shift, and go to state 69
    PLUS        shift, and go to state 70


State 85

   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   39     | Expr BITWISEAND Expr •
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr

    MUL    shift, and go to state 58
    DIV    shift, and go to state 60
    EQ     shift, and go to state 61
    GE     shift, and go to state 62
    GT     shift, and go to state 63
    LE     shift, and go to state 64
    LT     shift, and go to state 65
    MINUS  shift, and go to state 66
    MOD    shift, and go to state 67
    NE     shift, and go to state 68
    PLUS   shift, and go to state 70

    $default  reduce using rule 39 (Expr)


State 86

   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   40     | Expr BITWISEOR Expr •
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr

    BITWISEAND  shift, and go to state 53
    BITWISEXOR  shift, and go to state 55
    MUL         shift, and go to state 58
    DIV         shift, and go to state 60
    EQ          shift, and go to state 61
    GE          shift, and go to state 62
    GT          shift, and go to state 63
    LE          shift, and go to state 64
    LT          shift, and go to state 65
    MINUS       shift, and go to state 66
    MOD         shift, and go to state 67
    NE          shift, and go to state 68
    PLUS        shift, and go to state 70

    $default  reduce using rule 40 (Expr)


State 87

   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   41     | Expr BITWISEXOR Expr •
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr

    BITWISEAND  shift, and go to state 53
    MUL         shift, and go to state 58
    DIV         shift, and go to state 60
    EQ          shift, and go to state 61
    GE          shift, and go to state 62
    GT          shift, and go to state 63
    LE          shift, and go to state 64
    LT          shift, and go to state 65
    MINUS       shift, and go to state 66
    MOD         shift, and go to state 67
    NE          shift, and go to state 68
    PLUS        shift, and go to state 70

    $default  reduce using rule 41 (Expr)


State 88

   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   38     | Expr AND Expr •
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr

    BITWISEAND  shift, and go to state 53
    BITWISEOR   shift, and go to state 54
    BITWISEXOR  shift, and go to state 55
    MUL         shift, and go to state 58
    DIV         shift, and go to state 60
    EQ          shift, and go to state 61
    GE          shift, and go to state 62
    GT          shift, and go to state 63
    LE          shift, and go to state 64
    LT          shift, and go to state 65
    MINUS       shift, and go to state 66
    MOD         shift, and go to state 67
    NE          shift, and go to state 68
    PLUS        shift, and go to state 70

    $default  reduce using rule 38 (Expr)


State 89

   30 Expr: Expr • ASSIGN Expr
   30     | Expr ASSIGN Expr •
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr

    BITWISEAND  shift, and go to state 53
    BITWISEOR   shift, and go to state 54
    BITWISEXOR  shift, and go to state 55
    AND         shift, and go to state 56
    ASSIGN      shift, and go to state 57
    MUL         shift, and go to state 58
    DIV         shift, and go to state 60
    EQ          shift, and go to state 61
    GE          shift, and go to state 62
    GT          shift, and go to state 63
    LE          shift, and go to state 64
    LT          shift, and go to state 65
    MINUS       shift, and go to state 66
    MOD         shift, and go to state 67
    NE          shift, and go to state 68
    OR          shift, and go to state 69
    PLUS        shift, and go to state 70

    $default  reduce using rule 30 (Expr)


State 90

   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   34     | Expr MUL Expr •
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr

    $default  reduce using rule 34 (Expr)


State 91

   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   31     | Expr COMMA Expr •
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr

    BITWISEAND  shift, and go to state 53
    BITWISEOR   shift, and go to state 54
    BITWISEXOR  shift, and go to state 55
    AND         shift, and go to state 56
    ASSIGN      shift, and go to state 57
    MUL         shift, and go to state 58
    DIV         shift, and go to state 60
    EQ          shift, and go to state 61
    GE          shift, and go to state 62
    GT          shift, and go to state 63
    LE          shift, and go to state 64
    LT          shift, and go to state 65
    MINUS       shift, and go to state 66
    MOD         shift, and go to state 67
    NE          shift, and go to state 68
    OR          shift, and go to state 69
    PLUS        shift, and go to state 70

    $default  reduce using rule 31 (Expr)


State 92

   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   35     | Expr DIV Expr •
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr

    $default  reduce using rule 35 (Expr)


State 93

   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   42     | Expr EQ Expr •
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr

    MUL    shift, and go to state 58
    DIV    shift, and go to state 60
    GE     shift, and go to state 62
    GT     shift, and go to state 63
    LE     shift, and go to state 64
    LT     shift, and go to state 65
    MINUS  shift, and go to state 66
    MOD    shift, and go to state 67
    PLUS   shift, and go to state 70

    $default  reduce using rule 42 (Expr)


State 94

   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   45     | Expr GE Expr •
   46     | Expr • LT Expr
   47     | Expr • GT Expr

    MUL    shift, and go to state 58
    DIV    shift, and go to state 60
    MINUS  shift, and go to state 66
    MOD    shift, and go to state 67
    PLUS   shift, and go to state 70

    $default  reduce using rule 45 (Expr)


State 95

   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr
   47     | Expr GT Expr •

    MUL    shift, and go to state 58
    DIV    shift, and go to state 60
    MINUS  shift, and go to state 66
    MOD    shift, and go to state 67
    PLUS   shift, and go to state 70

    $default  reduce using rule 47 (Expr)


State 96

   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   44     | Expr LE Expr •
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr

    MUL    shift, and go to state 58
    DIV    shift, and go to state 60
    MINUS  shift, and go to state 66
    MOD    shift, and go to state 67
    PLUS   shift, and go to state 70

    $default  reduce using rule 44 (Expr)


State 97

   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   46     | Expr LT Expr •
   47     | Expr • GT Expr

    MUL    shift, and go to state 58
    DIV    shift, and go to state 60
    MINUS  shift, and go to state 66
    MOD    shift, and go to state 67
    PLUS   shift, and go to state 70

    $default  reduce using rule 46 (Expr)


State 98

   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   33     | Expr MINUS Expr •
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr

    MUL  shift, and go to state 58
    DIV  shift, and go to state 60
    MOD  shift, and go to state 67

    $default  reduce using rule 33 (Expr)


State 99

   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   36     | Expr MOD Expr •
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr

    $default  reduce using rule 36 (Expr)


State 100

   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   43     | Expr NE Expr •
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr

    MUL    shift, and go to state 58
    DIV    shift, and go to state 60
    GE     shift, and go to state 62
    GT     shift, and go to state 63
    LE     shift, and go to state 64
    LT     shift, and go to state 65
    MINUS  shift, and go to state 66
    MOD    shift, and go to state 67
    PLUS   shift, and go to state 70

    $default  reduce using rule 43 (Expr)


State 101

   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   37     | Expr OR Expr •
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr

    BITWISEAND  shift, and go to state 53
    BITWISEOR   shift, and go to state 54
    BITWISEXOR  shift, and go to state 55
    AND         shift, and go to state 56
    MUL         shift, and go to state 58
    DIV         shift, and go to state 60
    EQ          shift, and go to state 61
    GE          shift, and go to state 62
    GT          shift, and go to state 63
    LE          shift, and go to state 64
    LT          shift, and go to state 65
    MINUS       shift, and go to state 66
    MOD         shift, and go to state 67
    NE          shift, and go to state 68
    PLUS        shift, and go to state 70

    $default  reduce using rule 37 (Expr)


State 102

   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   32     | Expr PLUS Expr •
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr

    MUL  shift, and go to state 58
    DIV  shift, and go to state 60
    MOD  shift, and go to state 67

    $default  reduce using rule 32 (Expr)


State 103

   26 Statement: LBRACE Statement RBRACE •

    $default  reduce using rule 26 (Statement)


State 104

   28 Statement: WHILE LPAR Expr • RPAR Statement
   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr

    BITWISEAND  shift, and go to state 53
    BITWISEOR   shift, and go to state 54
    BITWISEXOR  shift, and go to state 55
    AND         shift, and go to state 56
    ASSIGN      shift, and go to state 57
    MUL         shift, and go to state 58
    COMMA       shift, and go to state 59
    DIV         shift, and go to state 60
    EQ          shift, and go to state 61
    GE          shift, and go to state 62
    GT          shift, and go to state 63
    LE          shift, and go to state 64
    LT          shift, and go to state 65
    MINUS       shift, and go to state 66
    MOD         shift, and go to state 67
    NE          shift, and go to state 68
    OR          shift, and go to state 69
    PLUS        shift, and go to state 70
    RPAR        shift, and go to state 108


State 105

   27 Statement: IF LPAR Expr • RPAR Statement ELSE Statement
   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr

    BITWISEAND  shift, and go to state 53
    BITWISEOR   shift, and go to state 54
    BITWISEXOR  shift, and go to state 55
    AND         shift, and go to state 56
    ASSIGN      shift, and go to state 57
    MUL         shift, and go to state 58
    COMMA       shift, and go to state 59
    DIV         shift, and go to state 60
    EQ          shift, and go to state 61
    GE          shift, and go to state 62
    GT          shift, and go to state 63
    LE          shift, and go to state 64
    LT          shift, and go to state 65
    MINUS       shift, and go to state 66
    MOD         shift, and go to state 67
    NE          shift, and go to state 68
    OR          shift, and go to state 69
    PLUS        shift, and go to state 70
    RPAR        shift, and go to state 109


State 106

   29 Statement: RETURN Expr SEMI •

    $default  reduce using rule 29 (Statement)


State 107

   31 Expr: Expr COMMA • Expr
   51     | IDENTIFIER LPAR Expr COMMA • Expr RPAR

    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31

    Expr  go to state 110


State 108

   28 Statement: WHILE LPAR Expr RPAR • Statement

    LBRACE      shift, and go to state 37
    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    WHILE       shift, and go to state 38
    IF          shift, and go to state 39
    RETURN      shift, and go to state 40

    Statement  go to state 111
    Expr       go to state 45


State 109

   27 Statement: IF LPAR Expr RPAR • Statement ELSE Statement

    LBRACE      shift, and go to state 37
    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    WHILE       shift, and go to state 38
    IF          shift, and go to state 39
    RETURN      shift, and go to state 40

    Statement  go to state 112
    Expr       go to state 45


State 110

   30 Expr: Expr • ASSIGN Expr
   31     | Expr • COMMA Expr
   31     | Expr COMMA Expr •
   32     | Expr • PLUS Expr
   33     | Expr • MINUS Expr
   34     | Expr • MUL Expr
   35     | Expr • DIV Expr
   36     | Expr • MOD Expr
   37     | Expr • OR Expr
   38     | Expr • AND Expr
   39     | Expr • BITWISEAND Expr
   40     | Expr • BITWISEOR Expr
   41     | Expr • BITWISEXOR Expr
   42     | Expr • EQ Expr
   43     | Expr • NE Expr
   44     | Expr • LE Expr
   45     | Expr • GE Expr
   46     | Expr • LT Expr
   47     | Expr • GT Expr
   51     | IDENTIFIER LPAR Expr COMMA Expr • RPAR

    BITWISEAND  shift, and go to state 53
    BITWISEOR   shift, and go to state 54
    BITWISEXOR  shift, and go to state 55
    AND         shift, and go to state 56
    ASSIGN      shift, and go to state 57
    MUL         shift, and go to state 58
    DIV         shift, and go to state 60
    EQ          shift, and go to state 61
    GE          shift, and go to state 62
    GT          shift, and go to state 63
    LE          shift, and go to state 64
    LT          shift, and go to state 65
    MINUS       shift, and go to state 66
    MOD         shift, and go to state 67
    NE          shift, and go to state 68
    OR          shift, and go to state 69
    PLUS        shift, and go to state 70
    RPAR        shift, and go to state 113

    $default  reduce using rule 31 (Expr)


State 111

   28 Statement: WHILE LPAR Expr RPAR Statement •

    $default  reduce using rule 28 (Statement)


State 112

   27 Statement: IF LPAR Expr RPAR Statement • ELSE Statement

    ELSE  shift, and go to state 114


State 113

   51 Expr: IDENTIFIER LPAR Expr COMMA Expr RPAR •

    $default  reduce using rule 51 (Expr)


State 114

   27 Statement: IF LPAR Expr RPAR Statement ELSE • Statement

    LBRACE      shift, and go to state 37
    LPAR        shift, and go to state 24
    MINUS       shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    DECIMAL     shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    WHILE       shift, and go to state 38
    IF          shift, and go to state 39
    RETURN      shift, and go to state 40

    Statement  go to state 115
    Expr       go to state 45


State 115

   27 Statement: IF LPAR Expr RPAR Statement ELSE Statement •

    $default  reduce using rule 27 (Statement)
